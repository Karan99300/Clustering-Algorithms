import networkx as nx

def first_and_second_order_neighbors(graph, vertex):
    first_order_neighbors = set(graph.neighbors(vertex))

    second_order_neighbors = set()
    for first_order_neighbor in first_order_neighbors:
        second_order_neighbors.update(graph.neighbors(first_order_neighbor))

    # Include both first and second-order neighbors in the result
    all_neighbors = first_order_neighbors.union(second_order_neighbors)

    return all_neighbors

# Example usage:
G = nx.Graph()  # Replace this with your graph
G.add_edges_from([(1, 2), (1, 3), (2, 4), (3, 4), (4, 5)])

vertex_of_interest = 1
result = first_and_second_order_neighbors(G, vertex_of_interest)

print(f"First and second-order neighbors of {vertex_of_interest}: {result}")
